@page "/downloads"
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging

@inject IAuthService Auth
@inject IDataService DataService
@inject UserManager<RemotelyUser> UserManager
@inject IWebHostEnvironment HostEnv
@inject NavigationManager NavManager
@inject ILogger<Downloads> Logger

<div class="row mb-3">
    <h4>Портативные (portbale) клиенты</h4>
    <div class="text-info col-sm-12 pl-0 mb-2">
        Доступ к устройству для помощи. Учетная запись не требуется.
    </div>
    <div class="col-sm-6 mb-3">
        <strong>Windows (64-Bit)</strong>
        <p>
            <a target="_blank" href="/api/ClientDownloads/Desktop/WindowsDesktop-x64/@_organizationId">Windows EXE</a>
        </p>
    </div>
    <div class="col-sm-6">
        <strong>Windows (32-Bit)</strong>
        <p>
            <a target="_blank" href="/api/ClientDownloads/Desktop/WindowsDesktop-x86/@_organizationId">Windows EXE</a>
        </p>
    </div>
    <div class="col-sm-6 mb-3">
        <strong>Linux 64-Bit</strong>
        <p>
            <a target="_blank" href="/api/ClientDownloads/Desktop/UbuntuDesktop/@_organizationId">Ubuntu Executable</a>
        </p>
    </div>
</div>


<div class="row">
    <h4>Комплекты для установки</h4>
    <div class="text-info col-sm-12 pl-0 mb-2">
        Установочные комплекты сервисов агента, которые предоставляют удаленный доступ и запуск скриптов.
    </div>

    @if (!_isAuthenticated)
    {
        <div class="col-sm-6 mb-3">
            <h6>Для загрузки агента необходимо авторизоваться.</h6>
        </div>

    }
    else
    {
        <div class="col-sm-6 mb-3">
            <strong>Windows 10 / 11 (64-Bit and 32-Bit)</strong>
            <p>
                <a target="_blank" href="/API/ClientDownloads/WindowsInstaller">Windows Installer (x64/x86)</a>
            </p>

            <p>
                <div class="small">Пример "тихой" установки сервиса агента:</div>

                <code class="label label-default small">
                    Remotely_Installer.exe
                    -install
                    -quiet
                    -organizationid "0b3d706b-9c5d-41e6-8ae9-5720d16324e6"
                    -serverurl "https://remotely.mytechshop.com"
                </code>
            </p>
            <p>
                <div class="small">Пример "тихого" удаления сервиса агента</div>

                <code class="label label-default small">Remotely_Installer.exe -uninstall -quiet</code>
            </p>
            <p>
                <div class="small">Пример локальной установки:</div>

                <code class="label label-default small">
                    Remotely_Installer.exe
                    -install
                    -quiet
                    -organizationid "0b3d706b-9c5d-41e6-8ae9-5720d16324e6"
                    -serverurl "https://remotely.mytechshop.com"
                    -path "[path]\Remotely-Win-x64.zip"
                </code>
            </p>
            <p>
                <div class="small">Все возможные ключи командной строки:</div>

                <code class="label label-default small">
                    Remotely_Installer.exe -install -quiet -supportshortcut
                    -organizationid "0b3d706b-9c5d-41e6-8ae9-5720d16324e6"
                    -serverurl "https://remotely.mytechshop.com"
                    -devicegroup "Customer Group 1"
                    -devicealias "Front Desk"
                    -deviceuuid "eebb4d87-5459-4976-989e-a7876dffc69c"
                </code>
            </p>

            <strong>Дополнительные компоненты</strong>
            <p>
                <a target="_blank" href="/Content/Win-Components/ndp48-x86-x64-allos-enu.exe">.Net 4.8 Автономный установщик</a>
                <br />
                <a target="_blank" href="/Content/Win-Components/USERTrustRSACertificationAuthority.crl">Сертифкат USER Trust RSA Certification Authority</a>
                <br />
                <a target="_blank" href="/Content/Win-Components/isrgrootx1.der">Список отзыва сертифкатов</a>
                <br />
                <div class="small">Для Windows 7 x86 - при запуске агента ошибка в журналре регистрации "failed to load the dll hostfxr"</div>
                <a target="_blank" href="/Content/Win-Components/windows6.1-kb4457144-x86_d2d9bc4f25b27fe28b11b2cd18df9b7835f22df3.msu">Автономный установщик обновления KB4457144</a>

            </p>

        </div>

        <div class="col-sm-6 mb-3">
            <strong>Linux 64-Bit</strong>
            <p>
                <a target="_blank" href="/API/ClientDownloads/UbuntuInstaller-x64">Ubuntu x64 Bash Installer</a>
                <br />
                <a target="_blank" href="/API/ClientDownloads/ManjaroInstaller-x64">Manjaro x64 Bash Installer</a>
                <br />
                <a target="_blank" href="/Content/Remotely-Linux.zip">Linux x64 Files Only</a>
            </p>
            <p>
                <div class="small">Пример установки:</div>

                <code class="label label-default small">sudo [path]/Install-Ubuntu-x64.sh</code>
            </p>
            <p>
                <div class="small">Пример локальной установки:</div>

                <code class="label label-default small">sudo [path]/Install-Ubuntu-x64.sh --path [path]/Remotely-Linux.zip</code>
            </p>
            <p>
                <div class="small">Uninstall:</div>

                <code class="label label-default small">sudo [path]/Install-Ubuntu-x64.sh --uninstall</code>
            </p>
        </div>

    }

</div>

@code {
    private string? _organizationId;
    private bool _isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        _isAuthenticated = await Auth.IsAuthenticated();

        if (_isAuthenticated)
        {
            var userResult = await Auth.GetUser();
            if (userResult.IsSuccess)
            {
                _organizationId = userResult.Value.OrganizationID;
            }
        }
        else
        {
            var orgResult = await DataService.GetDefaultOrganization();
            if (orgResult.IsSuccess)
            {
                _organizationId = orgResult.Value.ID;
            }
        }

        await base.OnInitializedAsync();
    }
}